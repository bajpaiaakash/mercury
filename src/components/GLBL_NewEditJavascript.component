<apex:component >
	<!-- <apex:attribute name="controller" description="the controller" type="GLBL_BaseEditController" required="true"/> -->
	<apex:attribute name="objectName" description="This is the API name of the controller object" type="String" required="true"/>
	<apex:attribute name="extControllerName" description="This is the name of the extension controller" type="String" required="true"/>
	<script>
		var j$ = jQuery.noConflict();

		function updatePicklist(targetElement, callingElement) {
			// Figure out the lookup value
			// If the field is an input then we need to find the related lkid
			// If the field is a span then the id value should be stored in a data field called related-id
			// *note: a span will be rendered for an input in edit mode if the input is on the child side of
			//    a non "re-parentable" master-detail relationship
			var lookupValue;

			if (callingElement.nodeName === "INPUT") {
				var ref = escapeVfId( j$(callingElement).attr('id') )+ '_lkid';
				lookupValue = j$(ref).val();
			} else if (callingElement.nodeName === "SPAN") {
				lookupValue = j$(callingElement).data('related-id');
			}

            // Make a call to the @remoteAction getOptions on the MERC_MeetingProductNewEdit controller
            // note that the definition of this method is actually in GLBL_BaseEditController
            {!extControllerName}.getOptions(
            	'{!objectName}', // the name of this object
            	targetElement,              // the id of the custom setting used to define the values for the child picklist
            	lookupValue,				// the id value of the parent lookup

            	// callback function to inject the returned html into the correct select list
            	function(result, event) {
            		var jTarget = j$('.'+targetElement);

					//this line converts the result sting into actual html
            		jTarget.html( j$('<textarea/>').html(result).text());

            		// Update the select list to the value associed with the value stored in the hidden field.
            		jTarget.val(
            			j$( escapeVfId(jTarget.data('hidden-id')))
            				.val()
            		);
            	}
            );
		}
	</script>
</apex:component>